#!/usr/bin/env bash

# Copyright 2015 Malte Splietker
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


function print_help {
  echo "Usage: daemonize [-h|--help] DIRECTORY COMMAND [ARGUMENTS]"
  echo
  echo "Run COMMAND with optional ARGUMENTS in a subshell, place the subshell in"
  echo "the background and print the subshell's PID as a reference."
  echo
  echo "STDOUT and STDERR of the COMMAND are written to DIRECTORY/proceeses/PID."
  echo
  echo "If the COMMAND terminates successful or fails the subshell's PID will be"
  echo "appended to DIRECTORY/pids_successful or DIRECTORY/pids_failed,"
  echo "respectively."
}

EXIT="TRUE"
if [[ -z $1 || $1 == "-h" || $1 == "--help" || -z $2 ]]; then
  :
elif [[ $1 != /* ]]; then
  echo -e "ERROR: Not an absolute path: $1\n"
elif [[ ! -x $2 ]]; then
  echo -e "ERROR: Not an executable: $2\n"
else
  EXIT="FALSE"
fi

if [[ ${EXIT} == "TRUE" ]]; then
  print_help
  exit 2
fi


CMD=${@:2}

DIRECTORY=$1
PROCESS_LOG_DIRECTORY="${DIRECTORY}/processes"

mkdir -p ${PROCESS_LOG_DIRECTORY}
if [[ ! -d ${PROCESS_LOG_DIRECTORY} ]]; then
  exit 1
fi

# Execute the command in a subshell and use the subshell's PID as a reference
# for the process:
#   - The subshell terminates as the process terminates
#   - All output of the process will be written to a file called ${PID}
# If the process terminated successfully store its PID.
(
    PID=${BASHPID};
    ${CMD} 2>&1 >${PROCESS_LOG_DIRECTORY}/${PID} | tee --append ${PROCESS_LOG_DIRECTORY}/${PID};

    RESULT=${PIPESTATUS[0]}
    if [[ ${RESULT} -eq 0 ]]; then
        echo ${PID} >> ${DIRECTORY}/pids_successful
    else
        echo ${PID} >> ${DIRECTORY}/pids_failed
    fi
) &

echo "$!"
