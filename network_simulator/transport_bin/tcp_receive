#!/usr/bin/env python2

from argparse import ArgumentParser
import socket
import threading

class ClientThread(threading.Thread):
    def __init__(self, connection):
        threading.Thread.__init__(self)
        self.connection = connection

    def run(self):
        try:
            data = self.connection.recv(512)
            while len(data) > 0:
                if "1" in data:
                    self.connection.send("1")
                    break
                data = self.connection.recv(512)
        finally:
            self.connection.close()


def main():
    parser = ArgumentParser(description="Receive a stream of bytes over tcp socket until ASCII 1 is received.")
    parser.add_argument('port', metavar='Port', help='Port to listens on')
    args = parser.parse_args()

    port = int(args.port)

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_address = ('', port)

    sock.bind(server_address)

    sock.listen(5)

    while True:
        connection, client_address = sock.accept()
        new_thread = ClientThread(connection)
        new_thread.start()

if __name__ == "__main__":
    main()